{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport * as React from 'react';\nimport usePatchElement from '../../_util/usePatchElement';\nimport HookModal from './HookModal';\nimport { withConfirm, withInfo, withSuccess, withError, withWarn } from '../confirm';\nvar uuid = 0;\nexport default function useModal() {\n  var _usePatchElement = usePatchElement(),\n      _usePatchElement2 = _slicedToArray(_usePatchElement, 2),\n      elements = _usePatchElement2[0],\n      patchElement = _usePatchElement2[1];\n\n  function getConfirmFunc(withFunc) {\n    return function hookConfirm(config) {\n      uuid += 1;\n      var modalRef = React.createRef();\n      var closeFunc;\n      var modal = React.createElement(HookModal, {\n        key: \"modal-\".concat(uuid),\n        config: withFunc(config),\n        ref: modalRef,\n        afterClose: function afterClose() {\n          closeFunc();\n        }\n      });\n      closeFunc = patchElement(modal);\n      return {\n        destroy: function destroy() {\n          if (modalRef.current) {\n            modalRef.current.destroy();\n          }\n        },\n        update: function update(newConfig) {\n          if (modalRef.current) {\n            modalRef.current.update(newConfig);\n          }\n        }\n      };\n    };\n  }\n\n  return [{\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }, React.createElement(React.Fragment, null, elements)];\n}","map":{"version":3,"sources":["/home/youssef/Desktop/Spotify_FE/node_modules/antd/es/modal/useModal/index.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","React","usePatchElement","HookModal","withConfirm","withInfo","withSuccess","withError","withWarn","uuid","useModal","_usePatchElement","_usePatchElement2","elements","patchElement","getConfirmFunc","withFunc","hookConfirm","config","modalRef","createRef","closeFunc","modal","createElement","key","concat","ref","afterClose","destroy","current","update","newConfig","info","success","error","warning","confirm","Fragment"],"mappings":"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","sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport * as React from 'react';\nimport usePatchElement from '../../_util/usePatchElement';\nimport HookModal from './HookModal';\nimport { withConfirm, withInfo, withSuccess, withError, withWarn } from '../confirm';\nvar uuid = 0;\nexport default function useModal() {\n  var _usePatchElement = usePatchElement(),\n      _usePatchElement2 = _slicedToArray(_usePatchElement, 2),\n      elements = _usePatchElement2[0],\n      patchElement = _usePatchElement2[1];\n\n  function getConfirmFunc(withFunc) {\n    return function hookConfirm(config) {\n      uuid += 1;\n      var modalRef = React.createRef();\n      var closeFunc;\n      var modal = React.createElement(HookModal, {\n        key: \"modal-\".concat(uuid),\n        config: withFunc(config),\n        ref: modalRef,\n        afterClose: function afterClose() {\n          closeFunc();\n        }\n      });\n      closeFunc = patchElement(modal);\n      return {\n        destroy: function destroy() {\n          if (modalRef.current) {\n            modalRef.current.destroy();\n          }\n        },\n        update: function update(newConfig) {\n          if (modalRef.current) {\n            modalRef.current.update(newConfig);\n          }\n        }\n      };\n    };\n  }\n\n  return [{\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }, React.createElement(React.Fragment, null, elements)];\n}"]},"metadata":{},"sourceType":"module"}