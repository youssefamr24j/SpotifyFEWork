{"ast":null,"code":"function _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport * as React from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport warning from '../../_util/warning';\nvar EMPTY_LIST = []; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      _ref$columnWidth = _ref.columnWidth,\n      selectionColWidth = _ref$columnWidth === void 0 ? 60 : _ref$columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerSelectedKeys = _React$useState2[0],\n      setInnerSelectedKeys = _React$useState2[1];\n\n  var mergedSelectedKeys = selectedRowKeys || innerSelectedKeys || EMPTY_LIST;\n  var mergedSelectedKeySet = React.useMemo(function () {\n    var keys = selectionType === 'radio' ? mergedSelectedKeys.slice(0, 1) : mergedSelectedKeys;\n    return new Set(keys);\n  }, [mergedSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastSelectedKey = _React$useState4[0],\n      setLastSelectedKey = _React$useState4[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setInnerSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = React.useCallback(function (keys) {\n    setInnerSelectedKeys(keys);\n    var records = keys.map(function (key) {\n      return getRecordByKey(key);\n    });\n\n    if (onSelectionChange) {\n      onSelectionChange(keys, records);\n    }\n  }, [setInnerSelectedKeys, getRecordByKey, onSelectionChange]); // Trigger single `onSelect` event\n\n  var triggerSingleSelection = React.useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = React.useMemo(function () {\n    if (!selections) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(mergedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              warning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, mergedSelectedKeySet, pageData, getRowKey]);\n  var transformColumns = React.useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Get flatten data\n\n\n    var flattedData = flattenData(pageData, childrenColumnName); // Support selection\n\n    var keySet = new Set(mergedSelectedKeySet); // Get all checkbox props\n\n    var checkboxPropsMap = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      checkboxPropsMap.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        warning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    }); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          keySet.add(key);\n          changeKeys.push(key);\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = React.createElement(Menu, null, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, React.createElement(Dropdown, {\n          overlay: menu\n        }, React.createElement(\"span\", null, React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, React.createElement(Checkbox, {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        return React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n          checked: keySet.has(key),\n          onChange: function onChange(event) {\n            if (!keySet.has(key)) {\n              triggerSingleSelection(key, true, [key], event.nativeEvent);\n            }\n          }\n        }));\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var hasKey = keySet.has(key); // Record checked\n\n        return React.createElement(Checkbox, _extends({}, checkboxPropsMap.get(key), {\n          checked: hasKey,\n          onChange: function onChange(_ref2) {\n            var nativeEvent = _ref2.nativeEvent;\n            var shiftKey = nativeEvent.shiftKey;\n            var startIndex = -1;\n            var endIndex = -1; // Get range of this\n\n            if (shiftKey) {\n              var pointKeys = new Set([lastSelectedKey, key]);\n              recordKeys.some(function (recordKey, recordIndex) {\n                if (pointKeys.has(recordKey)) {\n                  if (startIndex === -1) {\n                    startIndex = recordIndex;\n                  } else {\n                    endIndex = recordIndex;\n                    return true;\n                  }\n                }\n\n                return false;\n              });\n            }\n\n            if (endIndex !== -1 && startIndex !== endIndex) {\n              // Batch update selections\n              var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n              var changedKeys = [];\n\n              if (hasKey) {\n                rangeKeys.forEach(function (recordKey) {\n                  if (keySet.has(recordKey)) {\n                    changedKeys.push(recordKey);\n                    keySet[\"delete\"](recordKey);\n                  }\n                });\n              } else {\n                rangeKeys.forEach(function (recordKey) {\n                  if (!keySet.has(recordKey)) {\n                    changedKeys.push(recordKey);\n                    keySet.add(recordKey);\n                  }\n                });\n              }\n\n              var keys = Array.from(keySet);\n              setSelectedKeys(keys);\n\n              if (onSelectMultiple) {\n                onSelectMultiple(!hasKey, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n              }\n            } else {\n              // Single record selected\n              if (hasKey) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n\n              triggerSingleSelection(key, !hasKey, Array.from(keySet), nativeEvent);\n            }\n\n            setLastSelectedKey(key);\n          }\n        }));\n      };\n    } // Columns\n\n\n    var selectionColumn = {\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderCell\n    };\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, pageData, rowSelection, innerSelectedKeys, mergedSelectedKeys, selectionColWidth, mergedSelections, expandType, lastSelectedKey, onSelectMultiple, triggerSingleSelection]);\n  return [transformColumns, mergedSelectedKeySet];\n}","map":{"version":3,"sources":["/home/youssef/Desktop/Spotify_FE/node_modules/antd/es/table/hooks/useSelection.js"],"names":["_toArray","arr","_arrayWithHoles","_iterableToArray","_nonIterableRest","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_slicedToArray","_iterableToArrayLimit","TypeError","Symbol","iterator","toString","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_nonIterableSpread","iter","from","arr2","React","DownOutlined","Checkbox","Dropdown","Menu","Radio","warning","EMPTY_LIST","SELECTION_ALL","SELECTION_INVERT","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","concat","useSelection","rowSelection","config","_ref","selectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectMultiple","_ref$columnWidth","columnWidth","selectionColWidth","selectionType","type","selections","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","_React$useState","useState","_React$useState2","innerSelectedKeys","setInnerSelectedKeys","mergedSelectedKeys","mergedSelectedKeySet","useMemo","keys","slice","Set","_React$useState3","_React$useState4","lastSelectedKey","setLastSelectedKey","useEffect","setSelectedKeys","useCallback","records","map","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","index","selectInvert","keySet","has","add","transformColumns","columns","flattedData","checkboxPropsMap","Map","checkboxProps","set","process","env","NODE_ENV","recordKeys","filter","get","disabled","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabled","checked","indeterminate","renderCell","_","nativeEvent","hasKey","_ref2","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","selectionColumn","width","columnTitle","render","_columns","expandColumn","restColumns","selectionFixed"],"mappings":"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","sourcesContent":["function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport * as React from 'react';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport warning from '../../_util/warning';\nvar EMPTY_LIST = []; // TODO: warning if use ajax!!!\n\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      selectedRowKeys = _ref.selectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectMultiple = _ref.onSelectMultiple,\n      _ref$columnWidth = _ref.columnWidth,\n      selectionColWidth = _ref$columnWidth === void 0 ? 60 : _ref$columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerSelectedKeys = _React$useState2[0],\n      setInnerSelectedKeys = _React$useState2[1];\n\n  var mergedSelectedKeys = selectedRowKeys || innerSelectedKeys || EMPTY_LIST;\n  var mergedSelectedKeySet = React.useMemo(function () {\n    var keys = selectionType === 'radio' ? mergedSelectedKeys.slice(0, 1) : mergedSelectedKeys;\n    return new Set(keys);\n  }, [mergedSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastSelectedKey = _React$useState4[0],\n      setLastSelectedKey = _React$useState4[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setInnerSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = React.useCallback(function (keys) {\n    setInnerSelectedKeys(keys);\n    var records = keys.map(function (key) {\n      return getRecordByKey(key);\n    });\n\n    if (onSelectionChange) {\n      onSelectionChange(keys, records);\n    }\n  }, [setInnerSelectedKeys, getRecordByKey, onSelectionChange]); // Trigger single `onSelect` event\n\n  var triggerSingleSelection = React.useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = React.useMemo(function () {\n    if (!selections) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(mergedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n            setSelectedKeys(keys);\n\n            if (onSelectInvert) {\n              warning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, mergedSelectedKeySet, pageData, getRowKey]);\n  var transformColumns = React.useCallback(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Get flatten data\n\n\n    var flattedData = flattenData(pageData, childrenColumnName); // Support selection\n\n    var keySet = new Set(mergedSelectedKeySet); // Get all checkbox props\n\n    var checkboxPropsMap = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      checkboxPropsMap.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        warning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    }); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          keySet.add(key);\n          changeKeys.push(key);\n        });\n      }\n\n      var keys = Array.from(keySet);\n      setSelectedKeys(keys);\n\n      if (onSelectAll) {\n        onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n          return getRecordByKey(k);\n        }), changeKeys.map(function (k) {\n          return getRecordByKey(k);\n        }));\n      }\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = React.createElement(Menu, null, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return React.createElement(Menu.Item, {\n            key: key || index,\n            onClick: function onClick() {\n              if (onSelectionClick) {\n                onSelectionClick(recordKeys);\n              }\n            }\n          }, text);\n        }));\n        customizeSelections = React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, React.createElement(Dropdown, {\n          overlay: menu\n        }, React.createElement(\"span\", null, React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, React.createElement(Checkbox, {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        return React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n          checked: keySet.has(key),\n          onChange: function onChange(event) {\n            if (!keySet.has(key)) {\n              triggerSingleSelection(key, true, [key], event.nativeEvent);\n            }\n          }\n        }));\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var hasKey = keySet.has(key); // Record checked\n\n        return React.createElement(Checkbox, _extends({}, checkboxPropsMap.get(key), {\n          checked: hasKey,\n          onChange: function onChange(_ref2) {\n            var nativeEvent = _ref2.nativeEvent;\n            var shiftKey = nativeEvent.shiftKey;\n            var startIndex = -1;\n            var endIndex = -1; // Get range of this\n\n            if (shiftKey) {\n              var pointKeys = new Set([lastSelectedKey, key]);\n              recordKeys.some(function (recordKey, recordIndex) {\n                if (pointKeys.has(recordKey)) {\n                  if (startIndex === -1) {\n                    startIndex = recordIndex;\n                  } else {\n                    endIndex = recordIndex;\n                    return true;\n                  }\n                }\n\n                return false;\n              });\n            }\n\n            if (endIndex !== -1 && startIndex !== endIndex) {\n              // Batch update selections\n              var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n              var changedKeys = [];\n\n              if (hasKey) {\n                rangeKeys.forEach(function (recordKey) {\n                  if (keySet.has(recordKey)) {\n                    changedKeys.push(recordKey);\n                    keySet[\"delete\"](recordKey);\n                  }\n                });\n              } else {\n                rangeKeys.forEach(function (recordKey) {\n                  if (!keySet.has(recordKey)) {\n                    changedKeys.push(recordKey);\n                    keySet.add(recordKey);\n                  }\n                });\n              }\n\n              var keys = Array.from(keySet);\n              setSelectedKeys(keys);\n\n              if (onSelectMultiple) {\n                onSelectMultiple(!hasKey, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n              }\n            } else {\n              // Single record selected\n              if (hasKey) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n\n              triggerSingleSelection(key, !hasKey, Array.from(keySet), nativeEvent);\n            }\n\n            setLastSelectedKey(key);\n          }\n        }));\n      };\n    } // Columns\n\n\n    var selectionColumn = {\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderCell\n    };\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = _toArray(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, _extends(_extends({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat(_toConsumableArray(restColumns));\n    }\n\n    return [_extends(_extends({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat(_toConsumableArray(columns));\n  }, [getRowKey, pageData, rowSelection, innerSelectedKeys, mergedSelectedKeys, selectionColWidth, mergedSelections, expandType, lastSelectedKey, onSelectMultiple, triggerSingleSelection]);\n  return [transformColumns, mergedSelectedKeySet];\n}"]},"metadata":{},"sourceType":"module"}