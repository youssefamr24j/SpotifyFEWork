{"ast":null,"code":"var _jsxFileName = \"/home/youssef/Desktop/Spotify_FE/src/Components/Follow.js\";\nimport React, { useState } from 'react';\nimport './Follow.css';\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, this.state.isToggleOn ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 36\n      }\n    }, \" ON \") : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 56\n      }\n    }, \" OFF \"));\n  }\n\n} // const Follow =({checked})=>{ \n//     if(checked === false){\n//         return (\n//             <div >\n//                 <button id=\"follow-btn\" >Follow</button>\n//             </div>\n//           );\n//     }\n//     else{\n//         return (\n//             <div >\n//                 <button id=\"unfollow-btn\"  >UnFollow</button>\n//             </div>\n//           );\n//     }\n//   }\n// export default Follow;","map":{"version":3,"sources":["/home/youssef/Desktop/Spotify_FE/src/Components/Follow.js"],"names":["React","useState","Toggle","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;;AAGA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb,CAFiB,CAIjB;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAG;AACZ,SAAKE,QAAL,CAAcC,SAAS,KAAK;AAC1BJ,MAAAA,UAAU,EAAE,CAACI,SAAS,CAACJ;AADG,KAAL,CAAvB;AAGD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,OAAO,EAAE,KAAKJ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,UAAX,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,gBAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAD/C,CADF;AAKD;;AArBgC,C,CAyBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA","sourcesContent":["import React ,{ useState } from 'react';\nimport './Follow.css'\n\n\nclass Toggle extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {isToggleOn: true};\n  \n      // This binding is necessary to make `this` work in the callback\n      this.handleClick = this.handleClick.bind(this);\n    }\n  \n    handleClick() {\n      this.setState(prevState => ({\n        isToggleOn: !prevState.isToggleOn\n      }));\n    }\n  \n    render() {\n      return (\n        <button onClick={this.handleClick}>\n          {this.state.isToggleOn ? <span> ON </span> : <span> OFF </span>}\n        </button>\n      );\n    }\n}\n\n\n// const Follow =({checked})=>{ \n//     if(checked === false){\n//         return (\n//             <div >\n//                 <button id=\"follow-btn\" >Follow</button>\n//             </div>\n//           );\n//     }\n//     else{\n//         return (\n//             <div >\n//                 <button id=\"unfollow-btn\"  >UnFollow</button>\n//             </div>\n//           );\n//     }\n  \n\n//   }\n\n\n\n// export default Follow;\n\n\n\n"]},"metadata":{},"sourceType":"module"}